import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_easyloading/flutter_easyloading.dart';
import 'package:get/get_navigation/get_navigation.dart';
import 'package:provider/provider.dart';

// Firebase Core
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // This file is auto-generated by `flutterfire configure`

// App Features
import 'package:shop/custom_bottom_navbar.dart';
import 'package:shop/features/admin/features/controllers/admin_customer_controller.dart';
import 'package:shop/features/admin/features/controllers/admin_order_controller.dart';
import 'package:shop/features/admin/features/controllers/analytics_controller.dart';
import 'package:shop/features/admin/features/controllers/bottom_navbar.dart';
import 'package:shop/features/admin/features/controllers/create_product_controller.dart';
import 'package:shop/features/admin/features/controllers/get_product_controller.dart';
import 'package:shop/features/auth/controller/auth/auth_provider.dart';
import 'package:shop/features/controllers/cart_controller/cart.dart';
import 'package:shop/features/auth/controller/login_controller/login_controller.dart';
import 'package:shop/features/controllers/checkout/check_out_controller.dart';
import 'package:shop/features/controllers/order/order_controller.dart';
import 'package:shop/features/controllers/products/favorite_controller.dart';
import 'package:shop/features/controllers/products/get_all_product.dart';
import 'package:shop/features/controllers/products/products_controller.dart';
import 'package:shop/features/controllers/products/rating_controller.dart';
import 'package:shop/features/auth/controller/signup_controller/signup_controller.dart';
import 'package:shop/features/auth/controller/user/user_controller.dart';
import 'package:shop/data/services/storage_services.dart';
import 'package:shop/features/screens/personalization/controllers/address_controller.dart';
import 'package:shop/splash_screen.dart';
import 'package:shop/utils/devices/devices_utils.dart';
import 'package:shop/utils/theme/theme.dart';
import 'package:flutter_native_splash/flutter_native_splash.dart';

void main() async {
  WidgetsBinding widgetsBinding = WidgetsFlutterBinding.ensureInitialized();

  // üîê Show splash screen until all async setup is done
  FlutterNativeSplash.preserve(widgetsBinding: widgetsBinding);

  // ‚úÖ Initialize Firebase
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // ‚úÖ Initialize your app's local storage or services
  await StorageService.init();

  // Optional delay to simulate loading
  await Future.delayed(const Duration(seconds: 2));

  // ‚úÖ Remove splash screen after setup
  FlutterNativeSplash.remove();

  runApp(const MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  void initState() {
    super.initState();

    // ‚úÖ Show status bar (if hidden by splash or theme)
    TDeviceUtils.showStatusBar();

    // ‚úÖ Customize system UI
    SystemChrome.setSystemUIOverlayStyle(
      const SystemUiOverlayStyle(
        statusBarColor: Colors.transparent,
        statusBarIconBrightness: Brightness.dark,
        systemNavigationBarColor: Colors.white,
        systemNavigationBarIconBrightness: Brightness.dark,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => LoginController()),
        ChangeNotifierProvider(create: (_) => SignupController()),
        ChangeNotifierProvider(create: (_) => AuthProvider()),
        ChangeNotifierProvider(create: (_) => MainController()),
        ChangeNotifierProvider(create: (_) => AdminController()),
        ChangeNotifierProvider(create: (_) => AddProductController()),
        ChangeNotifierProvider(create: (_) => GetProductController()),
        ChangeNotifierProvider(create: (_) => ProductsController()),
        ChangeNotifierProvider(create: (_) => RatingController()),
        ChangeNotifierProvider(create: (_) => CartProvider()),
        ChangeNotifierProvider(create: (_) => AddressController()),
        ChangeNotifierProvider(create: (_) => CheckOutController()),
        ChangeNotifierProvider(create: (_) => OrderController()),
        ChangeNotifierProvider(create: (_) => UserController()),
        ChangeNotifierProvider(create: (_) => GetAllProduct()),
        ChangeNotifierProvider(create: (_) => AdminOrderController()),
        ChangeNotifierProvider(create: (_) => AnalyticsController()),
        ChangeNotifierProvider(create: (_) => AdminCustomerController()),
        ChangeNotifierProvider(create: (_) => FavoriteController()),
      ],
      child: GetMaterialApp(
        debugShowCheckedModeBanner: false,
        title: 'B&W',
        themeMode: ThemeMode.system,
        theme: TAppTheme.lightTheme,
        darkTheme: TAppTheme.darkTheme,
        home: const AuthWrapper(),
        builder: EasyLoading.init(),
      ),
    );
  }
}
